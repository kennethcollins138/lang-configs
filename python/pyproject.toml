[project]
name = "<project-name>"
version = "0.1.0"
description = "<project-description>"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.11.5",
    "pytest>=8.4.0",
    "ruff>=0.11.12",
    "loguru>=0.7.2",
    "pytest-benchmark>=4.0.0",
    "pyyaml>=6.0.1",
]

[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.12",
]

test = [
    "pytest>=8.4.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
]

benchmark = [
    "pytest-benchmark>=4.0.0",
]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "old",
    "tests"
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4",   # pycodestyle errors
    "E7",
    "E9",
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # pylint
    "TRY",  # tryceratops
    "RUF",  # ruff-specific rules
]

# Ignore specific rules
ignore = [
    "PLR0913",  # Too many arguments to function call
    "S101",     # Use of assert detected
    "G004",    # f string errors
    "TRY300",
    "UP007",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"


[tool.pytest]
pythonpath= "."

[tool.pytest.ini_options]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "slow: marks tests as slow running",
]

testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[dependency-groups]
dev = [
    "pytest-asyncio>=0.26.0",
]

[tool.pytest-benchmark]
min_rounds = 100
min_time = 0.1

